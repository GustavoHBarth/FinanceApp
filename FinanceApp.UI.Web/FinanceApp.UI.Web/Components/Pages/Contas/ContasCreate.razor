@page "/contas/create"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject IContasService _contaService
@using FinanceApp.Application.DTOs
@using FinanceApp.Domain.Enums
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@using FinanceApp.Application.Services.Interfaces

<h1>Nova Conta</h1>

<EditForm Model="novaConta" OnValidSubmit="HandleValidSubmit" FormName="CreateContaForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Categoria" class="form-label">Categoria</label>
        <InputSelect id="Categoria" class="form-select" @bind-Value="novaConta.Categoria">
            <option value="">-- Selecione a Categoria --</option>
            @foreach (var categoria in categorias)
            {
                <option value="@categoria">@categoria.ToString()</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => novaConta.Categoria)" />
    </div>

    <div class="mb-3">
        <label for="Descricao" class="form-label">Descrição</label>
        <InputText id="Descricao" class="form-control" @bind-value="novaConta.Descricao" />
        <ValidationMessage For="@(() => novaConta.Descricao)" />
    </div>

    <div class="mb-3">
        <label for="Data" class="form-label">Data</label>
        <InputDate id="Data" class="form-control" @bind-value="novaConta.Data" />
        <ValidationMessage For="@(() => novaConta.Data)" />
    </div>

    <div class="mb-3">
        <label for="Valor" class="form-label">Valor</label>
        <InputNumber id="Valor" class="form-control" @bind-value="novaConta.Valor" />
        <ValidationMessage For="@(() => novaConta.Valor)" />
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
    <a href="/contas" class="btn btn-secondary ms-2">Cancelar</a>
</EditForm>

@code {
    private CreateContaDto novaConta;
    private IEnumerable<CategoriaConta> categorias;

    protected override void OnInitialized()
    {
        // Inicializa novaConta com valores default
        novaConta = new CreateContaDto
        {
            Data = DateTime.Now,
            Valor = 0m,
            Categoria = 0, // Categoria padrão (sem seleção)
            Descricao = string.Empty
        };

        // Pega todas as categorias do enum para popular o select
        categorias = Enum.GetValues(typeof(CategoriaConta)).Cast<CategoriaConta>();
    }

    private async Task HandleValidSubmit()
    {
        await _contaService.CreateAsync(novaConta);
        Navigation.NavigateTo("/contas");
    }
}
